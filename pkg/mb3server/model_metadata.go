// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * MassBank3 API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

package mb3server


import (
	"errors"
)



type Metadata struct {

	Version string `json:"version,omitempty"`

	Timestamp string `json:"timestamp,omitempty"`

	GitCommit string `json:"git_commit,omitempty"`

	SpectraCount int32 `json:"spectra_count,omitempty"`

	CompoundCount int32 `json:"compound_count,omitempty"`

	CompoundClass []MetadataCompoundClassInner `json:"compound_class,omitempty"`

	CompoundClassChemont []MetadataCompoundClassInner `json:"compound_class_chemont,omitempty"`
}

// AssertMetadataRequired checks if the required fields are not zero-ed
func AssertMetadataRequired(obj Metadata) error {
	for _, el := range obj.CompoundClass {
		if err := AssertMetadataCompoundClassInnerRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.CompoundClassChemont {
		if err := AssertMetadataCompoundClassInnerRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertMetadataConstraints checks if the values respects the defined constraints
func AssertMetadataConstraints(obj Metadata) error {
	if obj.SpectraCount < 0 {
		return &ParsingError{Param: "SpectraCount", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.CompoundCount < 0 {
		return &ParsingError{Param: "CompoundCount", Err: errors.New(errMsgMinValueConstraint)}
	}
	for _, el := range obj.CompoundClass {
		if err := AssertMetadataCompoundClassInnerConstraints(el); err != nil {
			return err
		}
	}
	for _, el := range obj.CompoundClassChemont {
		if err := AssertMetadataCompoundClassInnerConstraints(el); err != nil {
			return err
		}
	}
	return nil
}
