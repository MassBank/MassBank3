// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * MassBank3 API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

package mb3server


import (
	"errors"
)



type MbRecordPeak struct {

	// Hashed Identifier of Mass Spectra
	Splash string `json:"splash"`

	Annotation MbRecordPeakAnnotation `json:"annotation,omitempty"`

	// Total Number of Peaks
	NumPeak int32 `json:"numPeak"`

	Peak MbRecordPeakPeak `json:"peak"`

	// Neutral Losses
	NeutralLoss []MbRecordPeakNeutralLossInner `json:"neutral_loss,omitempty"`
}

// AssertMbRecordPeakRequired checks if the required fields are not zero-ed
func AssertMbRecordPeakRequired(obj MbRecordPeak) error {
	elements := map[string]interface{}{
		"splash": obj.Splash,
		"numPeak": obj.NumPeak,
		"peak": obj.Peak,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertMbRecordPeakAnnotationRequired(obj.Annotation); err != nil {
		return err
	}
	if err := AssertMbRecordPeakPeakRequired(obj.Peak); err != nil {
		return err
	}
	for _, el := range obj.NeutralLoss {
		if err := AssertMbRecordPeakNeutralLossInnerRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertMbRecordPeakConstraints checks if the values respects the defined constraints
func AssertMbRecordPeakConstraints(obj MbRecordPeak) error {
	if err := AssertMbRecordPeakAnnotationConstraints(obj.Annotation); err != nil {
		return err
	}
	if obj.NumPeak < 1 {
		return &ParsingError{Param: "NumPeak", Err: errors.New(errMsgMinValueConstraint)}
	}
	if err := AssertMbRecordPeakPeakConstraints(obj.Peak); err != nil {
		return err
	}
	for _, el := range obj.NeutralLoss {
		if err := AssertMbRecordPeakNeutralLossInnerConstraints(el); err != nil {
			return err
		}
	}
	return nil
}
