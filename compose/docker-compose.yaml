services:
  postgres:
    image: ipbhalle/postgres:15-bingo-1.25.0
    restart: always
    ports:
      - "${DB_PORT}:5432"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - "${DB_LOCAL_PATH}:/var/lib/postgresql/data"
      - "../bingo-postgres/init_ALLOW_NON_UNIQUE_DEAROMATIZATION.sh:/docker-entrypoint-initdb.d/init_ALLOW_NON_UNIQUE_DEAROMATIZATION.sh"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready",
          "-d",
          "$$POSTGRES_DB",
          "-U",
          "$$POSTGRES_USER",
        ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 40s

  mb3server:
    build:
      context: ..
      dockerfile: Dockerfile-server
    restart: always
    ports:
      - "${MB3_API_PORT}:${MB3_SERVER_PORT}"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_PORT
      - DB_PASSWORD
      - DB_HOST
      - DB_NAME
      - DB_USER
      - MB3_SERVER_PORT
      - SIMILARITY_SERVICE_COSINE_HOST=similarity-service
      - SIMILARITY_SERVICE_COSINE_PORT=8080

  similarity-service:
    image: quay.io/massbank/massbank3-similarity-service:latest
    restart: always
    ports:
      - "${SIMILARITY_SERVICE_PORT}:8080"
    environment:
      - MSP
      - VERBOSE=${SIMILARITY_SERVICE_VERBOSE}
    volumes:
      - "${MSP_LOCAL_PATH}${MSP}:${MSP}"

  export-service:
    image: quay.io/massbank/massbank3-export-service:latest
    restart: always
    ports:
      - "${EXPORT_SERVICE_PORT}:8080"
    environment:
      MB_DATA_DIRECTORY: "/MassBank-data"
    volumes:
      - "${EXPORT_MB_DATA_DIRECTORY}:/MassBank-data"

  mb3frontend:
    build:
      context: ..
      dockerfile: Dockerfile-frontend
    environment:
      MB3_API_URL: "http://${MB3_API_HOST}:${MB3_API_PORT}"
      MB3_FRONTEND_URL: "http://${MB3_FRONTEND_HOST}:${MB3_FRONTEND_PORT}"
      MB3_FRONTEND_BASE_URL: "${MB3_FRONTEND_BASE_URL}"
      MB3_FRONTEND_VERSION: "${MB3_FRONTEND_VERSION}"
    restart: always
    ports:
      - "${MB3_FRONTEND_PORT}:3000"

  mb3tool:
    build:
      context: ..
      dockerfile: Dockerfile-dbtool
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_PORT
      - DB_PASSWORD
      - DB_HOST
      - DB_NAME
      - DB_USER
      - MB_DB_INIT
      - MB_GIT_REPO
      - MB_GIT_BRANCH
      - MB_DATA_DIRECTORY
      - MB_DROP_ALL
