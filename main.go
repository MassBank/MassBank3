// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * MassBank3 API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

package main

import (
	"embed"
	"io/fs"
	"log"
	"net/http"
	"strconv"

	"github.com/MassBank/MassBank3/pkg/config"
	"github.com/MassBank/MassBank3/pkg/mb3server"
	"github.com/go-chi/chi/v5"
)

// Embed the swagger-ui directory

//go:embed swagger-ui
var swaggerContent embed.FS

func main() {
	log.Printf("Server started")
	mb3server.ServerConfig = config.GetServerConfig()
	if mb3server.ServerConfig == nil {
		log.Fatal("Could not read config variables")
	}
	DefaultApiService := mb3server.NewDefaultApiService()
	DefaultApiController := mb3server.NewDefaultAPIController(DefaultApiService)

	r := mb3server.NewRouter(DefaultApiController)
	addSwaggerEndpoint(r)

	router := chi.NewRouter()    
    router.Mount(mb3server.ServerConfig.BaseUrl, r)

	log.Fatal(http.ListenAndServe(":"+strconv.FormatUint(uint64(mb3server.ServerConfig.ServerPort), 10), router))

}

func addSwaggerEndpoint(router chi.Router) {
	// Create a subdirectory filesystem for swagger-ui
	fsys, err := fs.Sub(swaggerContent, "swagger-ui")
	if err != nil {
		panic("failed to create sub filesystem: " + err.Error())
	}

	// Serve the swagger-ui files
	router.Handle("/ui/*", http.StripPrefix(mb3server.ServerConfig.BaseUrl+"/ui/", http.FileServer(http.FS(fsys))))
	// Redirect root to the swagger-ui
	router.Handle("/", http.RedirectHandler(mb3server.ServerConfig.ApiUrl+mb3server.ServerConfig.BaseUrl+"/ui/", http.StatusFound))
}
