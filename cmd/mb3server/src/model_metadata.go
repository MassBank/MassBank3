/*
 * MassBank3 API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package mb3server

type Metadata struct {
	Version string `json:"version,omitempty"`

	Timestamp string `json:"timestamp,omitempty"`

	GitCommit string `json:"git_commit,omitempty"`

	SpectraCount int32 `json:"spectra_count,omitempty"`

	CompoundCount int32 `json:"compound_count,omitempty"`

	CompoundClass []MetadataCompoundClassInner `json:"compound_class,omitempty"`
}

// AssertMetadataRequired checks if the required fields are not zero-ed
func AssertMetadataRequired(obj Metadata) error {
	for _, el := range obj.CompoundClass {
		if err := AssertMetadataCompoundClassInnerRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseMetadataRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Metadata (e.g. [][]Metadata), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseMetadataRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aMetadata, ok := obj.(Metadata)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertMetadataRequired(aMetadata)
	})
}
