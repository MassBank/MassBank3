/*
 * MassBank3 API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package mb3server

type FilterOptions struct {
	Metadata Metadata `json:"metadata,omitempty"`

	InstrumentType []string `json:"instrument_type,omitempty"`

	MsType []string `json:"ms_type,omitempty"`

	IonMode []string `json:"ion_mode,omitempty"`

	Mass FilterOptionsMass `json:"mass,omitempty"`

	Intensity FilterOptionsIntensity `json:"intensity,omitempty"`

	MaxLimit int32 `json:"max_limit,omitempty"`
}

// AssertFilterOptionsRequired checks if the required fields are not zero-ed
func AssertFilterOptionsRequired(obj FilterOptions) error {
	if err := AssertMetadataRequired(obj.Metadata); err != nil {
		return err
	}
	if err := AssertFilterOptionsMassRequired(obj.Mass); err != nil {
		return err
	}
	if err := AssertFilterOptionsIntensityRequired(obj.Intensity); err != nil {
		return err
	}
	return nil
}

// AssertRecurseFilterOptionsRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of FilterOptions (e.g. [][]FilterOptions), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseFilterOptionsRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aFilterOptions, ok := obj.(FilterOptions)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertFilterOptionsRequired(aFilterOptions)
	})
}
