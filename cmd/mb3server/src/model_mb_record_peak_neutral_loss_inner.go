/*
 * MassBank3 API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package mb3server

// MbRecordPeakNeutralLossInner - Values for a single neutral loss
type MbRecordPeakNeutralLossInner struct {

	// Difference in mass
	Difference float64 `json:"difference,omitempty"`

	// Peak identifier of the first peak
	Peak1Id int32 `json:"peak1_id,omitempty"`

	// Peak identifier of the second peak
	Peak2Id int32 `json:"peak2_id,omitempty"`
}

// AssertMbRecordPeakNeutralLossInnerRequired checks if the required fields are not zero-ed
func AssertMbRecordPeakNeutralLossInnerRequired(obj MbRecordPeakNeutralLossInner) error {
	return nil
}

// AssertRecurseMbRecordPeakNeutralLossInnerRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of MbRecordPeakNeutralLossInner (e.g. [][]MbRecordPeakNeutralLossInner), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseMbRecordPeakNeutralLossInnerRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aMbRecordPeakNeutralLossInner, ok := obj.(MbRecordPeakNeutralLossInner)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertMbRecordPeakNeutralLossInnerRequired(aMbRecordPeakNeutralLossInner)
	})
}
