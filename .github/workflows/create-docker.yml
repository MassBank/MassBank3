name: Create Docker Container

on:
  push:
    branches:
      - "main"
      - "dev"
  release:
    types: [published]

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./Dockerfile-dbtool
            image: quay.io/massbank/massbank-dbtool
            context: .
          - dockerfile: ./Dockerfile-server
            image: quay.io/massbank/massbank-api
            context: .
          - dockerfile: ./web-frontend/Dockerfile-frontend
            image: quay.io/massbank/massbank-frontend
            context: ./web-frontend

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to quay.io
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}

      # Extract tag name for tag events (not release)
      - name: Extract tag name
        if: startsWith(github.ref, 'refs/tags/')
        id: extract_tag
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.image }}
          tags: |
            # Use release tag if available
            type=raw,value=${{ github.event.release.tag_name }},enable=${{ github.event_name == 'release' }}
            # Use extracted tag for tag events (in case of tag push, e.g. please-release)
            type=raw,value=${{ env.TAG_NAME }},enable=${{ startsWith(github.ref, 'refs/tags/') }}
            # set latest tag for main branch and tags
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') }}
            # set dev tag for dev branch
            type=raw,value=dev,enable=${{ github.ref == 'refs/heads/dev' }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          push: ${{ github.event_name != 'pull_request' }}
          file: ${{ matrix.dockerfile }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
